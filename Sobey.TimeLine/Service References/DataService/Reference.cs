//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Sobey.TimeLine.DataService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsModel", Namespace="http://schemas.datacontract.org/2004/07/Sobey.TimeLine.Model")]
    public partial class NewsModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string ImageField;
        
        private System.DateTime TimeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataBefore", ReplyAction="http://tempuri.org/IService1/GetDataBeforeResponse")]
        System.IAsyncResult BeginGetDataBefore(System.DateTime time, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> EndGetDataBefore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataAfter", ReplyAction="http://tempuri.org/IService1/GetDataAfterResponse")]
        System.IAsyncResult BeginGetDataAfter(System.DateTime time, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> EndGetDataAfter(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Sobey.TimeLine.DataService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataBeforeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataBeforeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataAfterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataAfterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Sobey.TimeLine.DataService.IService1>, Sobey.TimeLine.DataService.IService1 {
        
        private BeginOperationDelegate onBeginGetDataBeforeDelegate;
        
        private EndOperationDelegate onEndGetDataBeforeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataBeforeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataAfterDelegate;
        
        private EndOperationDelegate onEndGetDataAfterDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataAfterCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataBeforeCompletedEventArgs> GetDataBeforeCompleted;
        
        public event System.EventHandler<GetDataAfterCompletedEventArgs> GetDataAfterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sobey.TimeLine.DataService.IService1.BeginGetDataBefore(System.DateTime time, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataBefore(time, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> Sobey.TimeLine.DataService.IService1.EndGetDataBefore(System.IAsyncResult result) {
            return base.Channel.EndGetDataBefore(result);
        }
        
        private System.IAsyncResult OnBeginGetDataBefore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime time = ((System.DateTime)(inValues[0]));
            return ((Sobey.TimeLine.DataService.IService1)(this)).BeginGetDataBefore(time, callback, asyncState);
        }
        
        private object[] OnEndGetDataBefore(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> retVal = ((Sobey.TimeLine.DataService.IService1)(this)).EndGetDataBefore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataBeforeCompleted(object state) {
            if ((this.GetDataBeforeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataBeforeCompleted(this, new GetDataBeforeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataBeforeAsync(System.DateTime time) {
            this.GetDataBeforeAsync(time, null);
        }
        
        public void GetDataBeforeAsync(System.DateTime time, object userState) {
            if ((this.onBeginGetDataBeforeDelegate == null)) {
                this.onBeginGetDataBeforeDelegate = new BeginOperationDelegate(this.OnBeginGetDataBefore);
            }
            if ((this.onEndGetDataBeforeDelegate == null)) {
                this.onEndGetDataBeforeDelegate = new EndOperationDelegate(this.OnEndGetDataBefore);
            }
            if ((this.onGetDataBeforeCompletedDelegate == null)) {
                this.onGetDataBeforeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataBeforeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataBeforeDelegate, new object[] {
                        time}, this.onEndGetDataBeforeDelegate, this.onGetDataBeforeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Sobey.TimeLine.DataService.IService1.BeginGetDataAfter(System.DateTime time, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataAfter(time, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> Sobey.TimeLine.DataService.IService1.EndGetDataAfter(System.IAsyncResult result) {
            return base.Channel.EndGetDataAfter(result);
        }
        
        private System.IAsyncResult OnBeginGetDataAfter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime time = ((System.DateTime)(inValues[0]));
            return ((Sobey.TimeLine.DataService.IService1)(this)).BeginGetDataAfter(time, callback, asyncState);
        }
        
        private object[] OnEndGetDataAfter(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> retVal = ((Sobey.TimeLine.DataService.IService1)(this)).EndGetDataAfter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataAfterCompleted(object state) {
            if ((this.GetDataAfterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataAfterCompleted(this, new GetDataAfterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAfterAsync(System.DateTime time) {
            this.GetDataAfterAsync(time, null);
        }
        
        public void GetDataAfterAsync(System.DateTime time, object userState) {
            if ((this.onBeginGetDataAfterDelegate == null)) {
                this.onBeginGetDataAfterDelegate = new BeginOperationDelegate(this.OnBeginGetDataAfter);
            }
            if ((this.onEndGetDataAfterDelegate == null)) {
                this.onEndGetDataAfterDelegate = new EndOperationDelegate(this.OnEndGetDataAfter);
            }
            if ((this.onGetDataAfterCompletedDelegate == null)) {
                this.onGetDataAfterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataAfterCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataAfterDelegate, new object[] {
                        time}, this.onEndGetDataAfterDelegate, this.onGetDataAfterCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Sobey.TimeLine.DataService.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<Sobey.TimeLine.DataService.IService1>, Sobey.TimeLine.DataService.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<Sobey.TimeLine.DataService.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetDataBefore(System.DateTime time, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = time;
                System.IAsyncResult _result = base.BeginInvoke("GetDataBefore", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> EndGetDataBefore(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> _result = ((System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel>)(base.EndInvoke("GetDataBefore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataAfter(System.DateTime time, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = time;
                System.IAsyncResult _result = base.BeginInvoke("GetDataAfter", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> EndGetDataAfter(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel> _result = ((System.Collections.ObjectModel.ObservableCollection<Sobey.TimeLine.DataService.NewsModel>)(base.EndInvoke("GetDataAfter", _args, result)));
                return _result;
            }
        }
    }
}
